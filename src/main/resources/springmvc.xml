<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!--开启注解扫描，只扫描Controller注解-->
    <context:component-scan base-package="com.liuyujie">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>
    <!--加载外部数据库配置 在配置连接池中用EL表达式获取   ${key}-->
    <context:property-placeholder location="classpath:jdbcConfig.properties"/>
    <!--配置的视图解析器对象 解析JSP视图-->
    <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--过滤静态资源-->
    <mvc:resources location="/css/" mapping="/css/**" />
    <mvc:resources location="/images/" mapping="/images/**" />
    <mvc:resources location="/js/" mapping="/js/**" />

    <!--配置拦截器-->
    <mvc:interceptors>
        <!--配置拦截器-->
        <mvc:interceptor>
            <!--要拦截的具体的方法-->
            <mvc:mapping path="/org/**"/>
            <!--不要拦截的方法
            <mvc:exclude-mapping path="/rest/authority/auth/getUserPerms"/>
            <mvc:exclude-mapping path="/rest/authority/cust/custUpload"/>
    -->
            <!--配置拦截器对象-->
            <bean class="com.liuyujie.Interceptor.RequestInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>
    <!--开启SpringMVC注解的支持-->
   <mvc:annotation-driven>

    <mvc:return-value-handlers>
        <bean class="com.ohaotian.plugin.common.handler.ReturnValueHandler"/>
    </mvc:return-value-handlers>
    </mvc:annotation-driven>

</beans>